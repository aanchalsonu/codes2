/*
Who's interested in football?

Rayne Wooney has been one of the top players for his football club for the last few years. But unfortunately, he got injured during a game a few months back and has
been out of play ever since.

He's got proper treatment and is eager to go out and play for his team again. Before doing that, he has to prove to his fitness to the coach and manager of the team.
Rayne has been playing practice matches for the past few days. He's played N practice matches in all.

He wants to convince the coach and the manager that he's improved over time and that his injury no longer affects his game. To increase his chances of getting back
into the team, he's decided to show them stats of any 2 of his practice games. The coach and manager will look into the goals scored in both the games and see how 
much he's improved. If the number of goals scored in the 2nd game(the game which took place later) is greater than that in 1st, then he has a chance of getting in.
Tell Rayne what is the maximum improvement in terms of goal difference that he can show to maximize his chances of getting into the team. If he hasn't improved over
time, he's not fit to play. Scoring equal number of goals in 2 matches will not be considered an improvement. Also, he will be declared unfit if he doesn't have enough 
matches to show an improvement.
*/

#include <iostream>
using namespace std;

int main() {
	// your code goes here
	long int t,n,i,j,c,mn;
	cin>>t;
	while(t--)
	{
	    cin>>n;
	    long int a[n];
	    for(i=0;i<n;i++)
	    {
	        cin>>a[i];
	    }
	    c=0;
	    mn=a[0];
	    for(i=1;i<n;i++)
	    {
	        if(a[i]<mn)
	        {
	            mn = a[i];
	        }
	        if(a[i]-mn > c)
	        c = a[i]-mn;
	        
	       // for(j=i+1;j<n;j++)
	       // {
	       //     if(a[j]>a[i])
	       //     {
	       //         c = max(c,a[j]-a[i]);
	       //     }
	       // }
	       // if((a[i]-a[i-1])>0)
	       // {
	       //     c = max(c,a[i]-a[i-1]);
	       // }
	    }
	    if(c>0)
	    {
	        cout<<c<<endl;
	    }
	    else
	    {
	        cout<<"UNFIT\n";
	    }
	}
	return 0;
}

