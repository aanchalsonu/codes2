/*
A bracket sequence 
�
S is called dense if one of the following is true:

�
S is empty.
�
=
(
�
)
S=(X) where 
�
X is dense.
You are given a bracket sequence 
�
S. What is the minimum number of brackets you must remove to make it dense?

Input Format
The first line of input will contain a single integer 
�
T, the number of test cases. The description of the 
�
T test cases follows.
The first line of each test case contains one integer 
�
N, denoting the length of the bracket sequence.
The second line of each test case contains the bracket sequence 
�
S of length 
�
N.
Output Format
For each test case, output on a new line the minimum number of brackets you must remove from 
�
S to make it dense.
*/

#include <iostream>
using namespace std;

int main() {

	long int t,n,i,ans;
	cin>>t;
	while(t--)
	{
	    cin>>n;
	    string s;
	    cin>>s;
	    ans=0;
	    long int st=0;
	    long int e=s.size()-1;
	    while(st<e)
	    {
	        if(s[st] == '(' && s[e] == ')')
	        {
	            st++;
	            e--;
	            continue;
	        }
	        
	        if(s[st] != '(' )
	        {
	            ans++;
	            st++;
	        }
	        if(s[e] != ')')
	        {
	            ans++;
	            e--;
	        }
	    }
	    
	    if(st == e)
	    ans++;
	    
	    
	   // for(i=0;i<n;)
	   // {
	   //     if(s[i] == '(' && s[i+1] == ')')
	   //     {
	   //         ans++;
	   //         i = i+2;
	   //     }
	   //     else
	   //     i++;
	   // }
	    
	    cout<<ans<<endl;
	}
	
	
	return 0;
}

