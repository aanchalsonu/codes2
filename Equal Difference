/*

You are given an array of 
�
N integers. Find the minimum number of integers you need to delete from the array such that the absolute difference between each pair of integers in the remaining array will become equal.

Input Format
The first line of input contains a single integer 
�
T denoting the number of test cases. The description of 
�
T test cases follows.
The first line of each test case contains an integer 
�
N.
The second line of each test case contains 
�
N space-separated integers 
�
1
,
�
2
,
…
,
�
�
A 
1
​
 ,A 
2
​
 ,…,A 
N
​
 .
Output Format
For each test case, print a single line containing one integer - the minimum number of integers to be deleted to satisfy the given condition.


*/

#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main() {
	// your code goes here
	
	int t; cin>>t;
	while(t--){
	    int n; cin>>n;
	  
	    map<int,int>m;
	    for(int i=0;i<n;i++){
	        int x; cin>>x;
	        m[x]++;
	    }
	    if(n==1 or n==2){
	        cout<<"0\n";
	        continue;
	    }
	    int maxcount=INT_MIN;
	    for(auto &i: m){
	        maxcount = max(maxcount, i.second);
	    }
	    if(maxcount ==1)
	        maxcount++;
	        
	    cout<<n-maxcount<<endl;
	}
	return 0;
	
	
	
	
	
	
	
	
	
	
	
	
	
	
// 	int t,n,i;
// 	cin>>t;
// 	while(t--)
// 	{
// 	    cin>>n;
// 	    long int a[n];
// 	    int maxi=1;
// 	    unordered_map<int,int> mp;
	    
// 	    for(i=0;i<n;i++)
// 	    {
// 	        cin>>a[i];
// 	    }
	    
// 	    if(n==2)
// 	    return 0;
	    
// 	    for(i=0;i<n;i++)
// 	    {
// 	        mp[a[i]]++;
// 	    }
// 	    for(auto itr : mp)
// 	    {
// 	        maxi = max(maxi,itr.second);
// 	    }
// 	    if(maxi == 1)
// 	    cout<<n-2<<endl;
// 	    else
// 	    cout<<n-maxi<<endl;
// 	}
	
// 	return 0;
}
