/*

Abhineet the Chess master of NIT Kurukshetra got bored of 8x8 chess board and invented the new variation of Chess, the one on an infinite chess board. There is
only a white king and NN black knights. The white king has to avoid checkmate as long as it can.

A situation is given. Determine if white king is in checkmate or not. The white king is in checkmate if and only if it is in check and it is not able to move to 
any of its neighboring positions which is not in check.

*/

#include <iostream>
using namespace std;

bool check(int x,int y,int kx,int ky)
{
    if(x-1 == kx && y-2 == ky)
    return true;
    else if(x-1 ==kx && y+2 == ky)
    return true;
    else if(x-2 == kx && y-1 == ky)
    return true;
    else if(x-2 == kx && y+1 == ky)
    return true;
    else if(x+1 == kx && y-2 == ky)
    return true;
    else if(x+1 == kx && y+2 == ky)
    return true;
    else if(x+2 == kx && y-1 ==ky)
    return true;
    else if(x+2 == kx && y+1 == ky)
    return true;
    else 
    return false;
}

int main() {
	// your code goes here
	long int t,n,i,j,kx,ky;
	cin>>t;
	while(t--)
	{
	    cin>>n;
	    long int x[n]={0},y[n]={0},f=0;
	    for(i=0;i<n;i++)
	    {
	        cin>>x[i]>>y[i];
	    }
	    cin>>kx>>ky;
	    for(i=0;i<n;i++)
	    {
	        if(check(x[i],y[i],kx,ky))
	        {
	            cout<<"YES"<<endl;
	            f=1;
	            break;
	        }
	    }
	    if(f==0)
	    {
	        cout<<"NO\n";
	    }
	}
	return 0;
}
