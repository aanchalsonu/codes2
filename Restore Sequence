/*
Alice has a very complex machine ― when fed with a sequence 
�
1
,
�
2
,
…
,
�
�
A 
1
​
 ,A 
2
​
 ,…,A 
N
​
 , it produces a sequence 
�
1
,
�
2
,
…
,
�
�
B 
1
​
 ,B 
2
​
 ,…,B 
N
​
 , where for each valid 
�
i, 
�
�
B 
i
​
  is the largest index 
�
j such that 
�
�
A 
i
​
  divides 
�
�
A 
j
​
  (since 
�
�
A 
i
​
  divides itself, such an index always exist). For example, if the machine is fed with 
�
=
[
2
,
6
,
5
,
3
,
4
]
A=[2,6,5,3,4], it produces 
�
=
[
5
,
2
,
3
,
4
,
5
]
B=[5,2,3,4,5].

Alice gave you a sequence 
�
B that was produced by the machine. Find an integer sequence 
�
A such that when it is fed into the machine, then the machine produces the sequence 
�
B. Alice does not like huge integers, so make sure that 
1
≤
�
�
≤
4
⋅
1
0
6
1≤A 
i
​
 ≤4⋅10 
6
  holds for each valid 
�
i.

*/

#include <iostream>
using namespace std;

int main() {
	// your code goes here
	
	long int t;
	cin>>t;
	while(t--)
	{
	    int n,i,x;
	    cin>>n;

	    for(i=0;i<n;i++)
	    {
	        cin>>x;
	        cout<<n-x+1<<" ";
	    }
	    cout<<endl;
	    
	    
	    
	}
	return 0;
}
