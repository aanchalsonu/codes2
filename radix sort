//program to impliment radix sort 
/* here we use the logic of count sort where
1. create a count array and initialize to 0
2. check for the lsb of the array elements and increase the elements of count array based on the frequency of numbers 
3. now keep the 0th index as it is and increment the other indexies as count[i] = cpount[i]+count[i-1]
4. update the array b 
5. store the elements in array b according to the logic
6. consider the digit under pass (0th , 1st ,2nd etc ) , apply modulus operator and generate the digit.
   now digit will serve as the index.
7. go to count array decrement the count by 1 and store the element in array b at the place where the decremented value is pointing.
*/
#include<stdio.h>
#include<stdlib.h>
int maxele(int a[],int n)
{
    int big=0,i;
    for(i=0;i<n;i++)
    {
        if(big<a[i])
        big = a[i];
    }
    return big ;
}


void rsort(int a[],int n,int p)
{
    int c[10]={0}; // c is the count array 
    int b[10],i,j,k;
    for(i=0;i<n;i++)// for loop to increment the c array according to the frequency 
    ++c[(a[i]/p)%10];
    for(i=1;i<=10;i++)
    c[i] = c[i]+c[i-1];
    // printf("\nCount array \n");
    // for(i=0;i<10;i++)
    // printf("%d ",c[i]);
    for(k=n-1;k>=0;k--) // traverse the array from last 
    {
        b[--(c[(a[k]/p)%10])]= a[k];
    }
    for(i=0;i<n;i++) // to transfer the contents of array b to a 
    a[i] = b[i];
}

void radix(int a[],int n)
{
    int pos,max;
    max = maxele(a,n);
    for(pos = 1; max/pos > 0 ;pos= pos*10)
    {
        rsort(a,n,pos);
    }
}

int main()
{
    int a[10],n, i;
    printf("\nEnter the value of n ");
    scanf("%d",&n);
    for(i=0;i<n;i++)
    scanf("%d",&a[i]);
    radix(a,n);
    printf("\nThe sorted array is \n");
    for(i=0;i<n;i++)
    printf("%d ",a[i]);
    
}
