/*
You are given an array 
�
A containing 
�
N integers. Find if it is possible to choose exactly 
�
M elements from the array such that the MEX of the chosen elements is exactly 
�
K.

Recall that the MEX of an array is the smallest non-negative integer that does not belong to the array. For example, the MEX of 
[
2
,
2
,
1
]
[2,2,1] is 
0
0 because 
0
0 does not belong to the array, the MEX of 
[
3
,
1
,
0
,
1
]
[3,1,0,1] is 
2
2 because 
0
0 and 
1
1 belong to the array, but 
2
2 does not.
*/

#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main() {
	// your code goes here
	
	long int t,n,i,skipcount,r,m,k;
	cin>>t;
	while(t--)
	{
	    cin>>n>>m>>k;
	    long int a[n],ans=0;
	    map<int,int>mp;
	    for(i=0;i<n;i++)
	    {
	        cin>>a[i];
	        mp[a[i]]++;
	    }

	    for(i=0;i<k;i++)
	    {
	        if(mp.find(i) != mp.end())
	        {
	            ans++;
	        }
	    }
	   
	   
	   if(n-mp[k] >= m && m>=k && ans==k)
	   {
	       cout<<"YES\n";
	   }
	   else
	   {
	       cout<<"NO\n";
	   }
	   // for(i=0;i<m;i++)
	   // {
	   //     if(a[i]==k)
	   //     {
	   //         cout<<"NO\n";
	   //         break;
	   //     }
	   // }
	   // if(i==m)
	   // {
	   //     cout<<"YES\n";
	   // }
	}
	
	return 0;
}
