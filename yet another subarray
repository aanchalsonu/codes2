/*

Given a positive integer 
�
N, find an array 
�
=
[
�
1
,
�
2
,
…
,
�
�
]
A=[A 
1
​
 ,A 
2
​
 ,…,A 
N
​
 ] of length 
�
N consisting of distinct integers from 
1
1 to 
1
0
9
10 
9
 , such that the following condition is satisfied for each subarray 
[
�
�
,
�
�
+
1
,
…
,
�
�
]
[A 
L
​
 ,A 
L+1
​
 ,…,A 
r
​
 ] (
1
≤
�
≤
�
≤
�
1≤L≤R≤N):

The sum of elements in the subarray is divisible by its length i.e. 
�
�
+
�
�
+
1
+
…
+
�
�
A 
L
​
 +A 
L+1
​
 +…+A 
R
​
  is divisible by 
�
−
�
+
1
R−L+1.
It can be proved that such an array always exists under given constraints.

If there are multiple possible arrays, you may print any of them.

Input Format
The first line of the input contains a single integer 
�
T, denoting the number of test cases. The description of 
�
T test cases follows.
Each test case consists of a single line containing one positive integer 
�
N, the length of the array 
�
A.
Output Format
For each test case, print one line containing 
�
N space-separated integers, the contents of the array 
�
A.

*/




#include <bits/stdc++.h>
using namespace std;
#define int long long
signed main(){
    int n;
    cin>>n;
    while(n--){
        int a;
        cin>>a;
        for(int i=1;i<=a;i++){
            cout<<2*i-1<<" ";
        }
        cout<<endl;
    }
	return 0;
}
















// #include <iostream>
// #include<bits/stdc++.h>
// using namespace std;

// signed main() {
// 	// your code goes here
// 	long int t,n,i,sum,len,j;
// 	cin>>t;
// 	while(t--)
// 	{
// 	    cin>>n;
	    
// 	    if(n==1)
// 	    return 1;
	    
// 	    for(i=1;i<n;i++)
// 	    {
// 	        cout<<2*i-1<<" ";
// 	     }
// 	    cout<<endl;
	    
// 	   // sum=0;
// 	   // len =1;
// 	   // j=0;
// 	   // vector<int> ans;
	    
// 	   // for(i=1;i<10000000&&j<n;i++)
// 	   // {
// 	   //     sum = sum +i;
// 	   //     if(sum % len == 0)
// 	   //     {
// 	   //         ans.push_back(i);
// 	   //         len++;
// 	   //         j++;
// 	   //     }
// 	   // }
// 	   // for(i=0;i<ans.size();i++)
// 	   // {
// 	   //     cout<<ans[i]<<" ";
// 	   // }
// 	   // cout<<endl;
// 	}
// 	return 0;
// }
