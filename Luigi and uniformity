/*
Luigi has an array AA of NN positive integers. He wants to make all elements of the array equal.

In one move, he can:

Choose an index ii (1\le i \le N)(1≤i≤N) and divide the element A_iA 
i
​
  by any one of its divisors.
In other words, he can choose a positive integer XX such that X | A_iX∣A 
i
​
  and set A_i := \frac{A_i}{X}A 
i
​
 := 
X
A 
i
​
 
​
 .
Find the minimum number of moves required to make all the elements of the array equal.

*/


#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main() {
	// your code goes here
	long int t,n,i,c,temp;
	cin>>t;
	while(t--)
	{
	    cin>>n;
	    long int a[n],mn=9999;
	    for(i=0;i<n;i++)
	    {
	        cin>>a[i];
	       // if(mn>a[i])
	       // {
	       //     mn = a[i];
	       // }
	    }
	    sort(a,a+n);
	    mn = a[0];
	   // if(a[0]%2 == 0)
	   // {
	   c=0;
	   temp=0;
	   // }
	   // else
	   // {
	   //     c=1;
	   // }
	    for(i=1;i<n;i++)
	    {
	        if(a[i]!=mn)
	        {
	            if(a[i]%mn == 0)
	            {
	                c++;
	            }
	            else
	            {
	                temp=1;
	                break;
	            }
	        }
	    }
	    if(temp == 1)
	    {
	        cout<<n<<endl;
	    }
	    else
	    cout<<c<<endl;
	}
	return 0;
}


