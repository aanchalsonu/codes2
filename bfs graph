/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, PHP, Ruby, 
C#, VB, Perl, Swift, Prolog, Javascript, Pascal, HTML, CSS, JS
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include<stdio.h>
#include<stdlib.h>

struct node
{
    int v;
    struct node * link;
};
typedef struct node nd;
nd * a[50] = {0};

int f=0, r=-1, n;
int q[50];
int visited[50]={0};
void create()
{
    int non,i,j;// non - Number of nodes 
    nd * r=0 , *t;
    printf("\nENter number of vertexes ");
    scanf("%d",&n);
    for(int i=0;i<n;i++)
    {
        printf("\nEnter number of nodes ");
        scanf("%d",&non);
        if(non == 0)
        a[i] = 0;
        r=0;
        for(int j=0;j<non;j++)
        {
            nd * t =malloc(sizeof(nd));
            printf("\nEnter the vertex ");
            scanf("%d",&(t->v));
            t->link =0;
            if(a[i] == 0)
            a[i] = t;
            else
            r->link = t;
            r=t;
        }
    }
}

void display()
{
    nd * t;
    int i,j;
    for(i=0,t = a[i]; i<n;i++,t=a[i])
    {
        printf("\nvertex : %d ",i);
        if(t == 0)
        printf("\n0");
        for(; t;t= t->link)
        printf("\n%d ",t->v);
    }
}
void addq(int v)
{
    q[++r] = v;
}
int deleteq()
{
    return q[f++];
}
 void bfs(int v)
 {
     nd *w;
     int i;
     
     printf("\n%d ", v);
     visited[v] = 1;
     addq(v);
     while(r>=f)
     {
         v = deleteq();
         for(w= a[v] ; w; w->link)
         if(!visited[w->v])
         {
             printf("%d ",w->v);
             addq(w->v);
             visited[w->v] = 1;
         }
     }
     
 }
int main()
{
    create();
    display();
    bfs(0);

    return 0;
}

