/*
Alexey is trying to develop a program for a very simple microcontroller. It makes readings from various sensors over time, and these readings must happen at
specific regular times. Unfortunately, if two of these readings occur at the same time, the microcontroller freezes and must be reset.

There are N different sensors that read data on a regular basis. For each i from 1 to N, the reading from sensor i will occur every Ai milliseconds with 
the first reading occurring exactly Ai milliseconds after the microcontroller is powered up. Each reading takes precisely one millisecond on Alexey's microcontroller.

Alexey wants to know when the microcontroller will freeze after he turns it on.
*/

#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main() {
	// your code goes here
	
	long int t,n,i,j,r,ans,res;
	cin>>t;
	while(t--)
	{
	    cin>>n;
	    long int a[n];
	    for(i=0;i<n;i++)
	    {
	        cin>>a[i];
	    }
	    r = INT_MAX;
	    ans=0;
	    res=0;
	    for(i=0;i<n-1;i++)
	    {
	        for(j=i+1;j<n;j++)
	        {
	            ans = __gcd(a[i],a[j]);
	            res = (a[i]*a[j])/ans;
	            if(res<r)
	            {
	                r=res;
	            }
	        }
	        
	    }
	    cout<<r<<endl;;
	    
	    
	    
	    
	    
	    
	   // sort(a,a+n);
	   // for(i=0;i<n;i++)
	   // {
	   //     if(a[i] == 1)
	   //     {
	   //         cout<<a[i+1]<<endl;
	   //         break;
	   //     }
	   //     else if(a[i] == a[i+1])
	   //     {
	   //         cout<<a[i]<<endl;
	   //         break;
	   //     }
	   //     else if(a[i+1]-a[i] == 1)
	   //     {
	   //         cout<<a[i]*a[i+1]<<endl;
	   //         break;
	   //     }
	   // }
	    
	}
	return 0;
}
