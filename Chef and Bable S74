/*
Chef gives an array AA with NN elements to Babla. Babla's task is to find the maximum non-negative integer XX such that:

No element in the array belongs to the range [-X, X][−X,X]. In other words, for all (1\le i \le N)(1≤i≤N), either A_i \lt -XA 
i
​
 <−X or A_i \gt XA 
i
​
 >X.
Help Babla to find the maximum non-negative integer XX for which the given condition is satisfied or determine if no such XX exists.
*/

#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main() {
	// your code goes here
	long long int t,n,i,h,l,r;
	cin>>t;
	while(t--)
	{
	    cin>>n;
	    long long int a[n];
	    h=1e9+1;
	    l=-1e9-1;
	    r=0;
	    for(i=0;i<n;i++)
	    {
	        cin>>a[i];
	        if(a[i] >=0 && a[i]<h)
	        {
	            h=a[i];
	        }
	        if(a[i]<0 && a[i]>l)
	        {
	            l = a[i];
	        }
	    }
	   // sort(a,a+n);
	   // for(i=0;i<n;i++)
	   // {
	   //     if(a[i] <0 && a[i+1]>0)
	   //     {
	   //         h=a[i+1];
	   //         l=a[i];
	   //         break;
	   //     }
	   // }
	    r = min(h,abs(l));
	    cout<<r-1<<endl;
	    
	    
	    
	   // if(a[0] > 0)
	   // {
	   //     cout<<a[0]-1<<endl;
	   // }
	   // else
	   // {
	   //     i=0;
	   //     while(a[i] <= 0 && i<n)
	   //     {
	   //         i++;
	   //     }
	   //     if(i==n)
	   //     {
	   //         cout<<"-1"<<endl;
	   //     }
	   //     else{
	   //         cout<<a[i]-1<<endl;
	   //     }
	   // }
	}
	return 0;
}
