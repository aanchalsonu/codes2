/*
There are n courses in a university being offered. These courses are numbered from 1 to n in the increasing order of their difficulty. For each course, 
you can have some courses as prerequisites. The prerequisite courses for a course should be of lower difficulty than it. You are given an array a of size n,
where ai denotes that there should be at least ai prerequisite courses for i-th course.

The university wants to estimate the efficiency of the allocation of prerequisites of courses by maximizing the number of courses that are not prerequisites 
for any other course. Find out what's the maximum such number of courses possible. It is guaranteed that ai < i, thus making sure that it is possible to allocate
the prerequisites for each of the course.
*/

#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main() {
	// your code goes here
	long int t,n,i,mx;
	cin>>t;
	while(t--)
	{
	    cin>>n;
	    long int a[n];
	    mx=0;
	   // map<int,int> mp;
	    for(i=0;i<n;i++)
	    {
	        cin>>a[i];
	        mx = max(mx,a[i]);
	       // mp[a[i]]++;
	    }
	    cout<<(n-mx)<<endl;
	   // sort(a,a+n);
	   // cout<<mp[a[n-1]]<<endl;
	}
	return 0;
}

