/*
Chef likes to play with big numbers. Today, he has a big positive integer N. He can select any two digits from this number (the digits can be same but their 

positions should be different) and orders them in any one of the two possible ways. For each of these ways, he creates a two digit number from it (might 
contain leading zeros). Then, he will pick a character corresponding to the ASCII value equal to this number, i.e. the number 65 corresponds to 'A', 66 to 
'B' and so on till 90 for 'Z'. Chef is only interested in finding which of the characters in the range 'A' to 'Z' can possibly be picked this way.

*/

#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main() {
	// your code goes here
	
	
	long long int t,n,i,j,l,r,f;
	cin>>t;
	while(t--)
	{
	    string s;
	    cin>>s;
	    map<char,int>mp;
	    for(i=0;i<s.length();i++)
	    {
	        mp[(int)(s[i]-48)]++; //keep count of every character
	    }
	    f=0;
	    for(char c = 'A' ; c <= 'Z';c++)
	    {
	        j = c;
	        l = c%10; // for 65 l =5 
	        r = c/10; // for 65 r =6
	        if((mp.find(l) != mp.end() && mp.find(r)!= mp.end()) && (l != r || mp[l]>=2)) // find l and r and check if l!=r and if l==r then count of units place 
          should be greater than one, only then it is possible
	        {
	            f=1;
	            cout<<c;
	        }
	    }
	    if(f==1) // for Numbers not in range of 65 to 90 dont do anything
	    {
	        cout<<endl;
	    }
	}
	
	
	// 	long long int t,n,i,j,r,index,temp;
// 	set<char> ans;
// 	vector<int> a;
// 	cin>>t;
// 	while(t--)
// 	{
// 	    cin>>n;
// 	    a.clear();
// 	    while(n>0)
// 	    {
// 	        r = n%10;
// 	        n = n/10;
// 	        a.push_back(r);
// 	    }
// 	    sort(a.begin(),a.end());
// 	    auto itr = find(a.begin(),a.end(),6);
// 	    if(itr != a.end())
// 	    {
// 	        index = itr-a.begin();
// 	    }
// 	    else
// 	    {
// 	       // cout<<"\n";
// 	        continue;
// 	    }
// 	    for(i=index;i<a.size();i++)
// 	    {
// 	        for(j=0;j<a.size();j++)
// 	        {
// 	            temp = a[i]*10+a[j];
// 	            if(temp >=65 && temp <=90 && i!=j)
// 	            {
// 	                ans.insert((char)temp);
// 	            }
// 	        }
// 	    }
// 	    for(auto it=ans.begin();it != ans.end();it++)
// 	    {
// 	        cout<<*it;
// 	    }
// 	    cout<<endl;
	    
// 	}
	return 0;
}
