/*

Chef is stuck in a two dimensional maze having N rows and M columns. He needs to get out of the maze as soon as possible and arrive at the
kitchen in order to serve his hungry customers. But, he can get out of the maze only if he is able to successfully find any magical path in the given maze.

A path is defined as magical if it starts from any of the cell (a,b) of the maze and ends at the cell (c,d) such that the following conditions are satisfied :-

|a - c| + |b - d| = 1
All the cells in the maze are traversed exactly once.
It is allowed to move only in the four directions - up, down, left and right from the current cell.
Input
First line of the input contains an integer T denoting the number of different types of scenarios.
Each of the next T lines will contain two integers N, M denoting the dimensions of the maze.

*/

#include <iostream>
using namespace std;

int main() {
	// your code goes here
	
	long int t,n,m;
	cin>>t;
	while(t--)
	{
	    cin>>n>>m;
	    if((n == 1 && m == 2)
	    || (n == 2 && m == 1)
	    || (n != 1 && m != 1 && (n % 2 == 0 || m % 2 == 0)))
	    cout<<"Yes\n";
	    else
	    cout<<"No\n";
	}
	return 0;
}
