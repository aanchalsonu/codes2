/*
The Chef is given a list of N triangles. Each triangle is identfied by the coordinates of its three corners in the 2-D cartesian plane.
His job is to figure out how many of the given triangles are right triangles. A right triangle is a triangle in which one angle is a 90 degree angle.
The vertices of the triangles have integer coordinates and all the triangles given are valid( three points aren't colinear ).  

*/


#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main() {
	// your code goes here
	long int n,x1,y1,x2,y2,x3,y3,r;
	cin>>n;
	r=0;
	while(n--)
	{
	    cin>>x1>>y1>>x2>>y2>>x3>>y3;
	    long int a = (long int)pow((x2-x1),2) + (long int)pow((y2-y1),2) ;
	    long int b = (long int)pow((x3-x2),2) + (long int)pow((y3-y2),2);
	    long int c = (long int)pow((x3-x1),2) + (long int)pow((y3-y1),2);
	    if(a>0 && b>0 && c>0 )
	    {
	        if(a==(b+c) || b == (a+c) || c == (a+b))
	        {
	            r++;
	        }
	    }
	    
	}
	cout<<r<<endl;
	return 0;
}


 
