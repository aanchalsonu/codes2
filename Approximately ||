/*

You are given an array of N integers a1, a2, ..., aN and an integer K. Find the number of such unordered pairs {i, j} that

i ≠ j
|ai + aj - K| is minimal possible
Output the minimal possible value of |ai + aj - K| (where i ≠ j) and the number of such pairs for the given array and the integer K.

Input
The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case consists of two space separated integers - N and K respectively.
The second line contains N single space separated integers - a1, a2, ..., aN respectively.

Output
For each test case, output a single line containing two single space separated integers - the minimal possible value of |ai + aj - K| and the number of 
unordered pairs {i, j} for which this minimal difference is reached.

*/


#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main() {
	// your code goes here
	long int t,n,k,c,mini,i,j;
	cin>>t;;
	while(t--)
	{
	    cin>>n>>k;
	    long int a[n];
	    for(i=0;i<n;i++)
	    {
	        cin>>a[i];
	    }
	    c=0;
	    mini = INT_MAX;
	    for(i=0;i<n;i++)
	    {
	        for(j=i+1;j<n;j++)
	        {
	            int x = abs(a[i]+a[j]-k);
	            if( x < mini)
	            {
	                mini = x;
	                c=1;
	            }
	            else if(x == mini)
	            {
	                c++;
	            }
	        }
	    }
	    cout<<mini<<" "<<c<<endl;
	}
	
	
	return 0;
}
